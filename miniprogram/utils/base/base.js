"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var baseType_1 = require("./baseType");
exports.wxGetsysteminfo = wx.getSystemInfoSync();
exports.updateManagerFn = function () {
    var updateManager = wx.getUpdateManager();
    updateManager.onCheckForUpdate(function (res) {
        console.log(res.hasUpdate);
    });
    updateManager.onUpdateReady(function () {
        wx.showModal({
            title: '更新提示',
            content: '新版本已经准备好，是否重启应用？',
            success: function (res) {
                if (res.confirm) {
                    updateManager.applyUpdate();
                }
            }
        });
    });
    updateManager.onUpdateFailed(function () {
        wx.showToast({
            title: '更新失败',
            icon: 'none',
            duration: 1500,
            mask: false,
        });
    });
};
exports.getLaunchOptionsSync = function () {
    var data = wx.getLaunchOptionsSync();
    var query = "";
    try {
        query = JSON.stringify(data.query);
    }
    catch (error) {
    }
    return query;
};
exports.routerPush = function (name, path, delta) {
    if (delta === void 0) { delta = 1; }
    var routerMap = new Map([
        [baseType_1.routerEnumPushNameType.switchTab, function () { return wx.switchTab({ url: path }); }],
        [baseType_1.routerEnumPushNameType.reLaunch, function () { return wx.reLaunch({ url: path }); }],
        [baseType_1.routerEnumPushNameType.redirectTo, function () { return wx.redirectTo({ url: path }); }],
        [baseType_1.routerEnumPushNameType.navgateTo, function () { return wx.navigateTo({ url: path }); }],
        [baseType_1.routerEnumPushNameType.navigateBack, function () { return wx.navigateBack({ delta: delta }); }]
    ]);
    return routerMap.get(name)();
};
exports.toast = function (name, obj) {
    var toastMap = new Map([
        [baseType_1.toastEnumType.showToast, function () { return wx.showToast(__assign({}, obj)); }],
        [baseType_1.toastEnumType.showModel, function () { return wx.showModal(__assign({}, obj)); }],
        [baseType_1.toastEnumType.showLoading, function () { return wx.showLoading(__assign({}, obj)); }],
        [baseType_1.toastEnumType.hideLoading, function () { return wx.hideLoading(__assign({}, obj)); }],
        [baseType_1.toastEnumType.hideToast, function () { return wx.hideToast(__assign({}, obj)); }],
    ]);
    return toastMap.get(name)();
};
exports.showActionSheet = function (obj) {
    return wx.showActionSheet(__assign({}, obj));
};
exports.showNavigationBarLoading = function (obj) {
    return wx.showNavigationBarLoading(__assign({}, obj));
};
exports.setNavigationBarTitle = function (obj) {
    return wx.setNavigationBarTitle(__assign({}, obj));
};
exports.setNavigationBarColor = function (obj) {
    return wx.setNavigationBarColor(__assign({}, obj));
};
exports.hideNavigationBarLoading = function (obj) {
    return wx.hideNavigationBarLoading(__assign({}, obj));
};
exports.hideHomeButton = function (obj) {
    return wx.hideHomeButton(__assign({}, obj));
};
exports.stopPullDownRefresh = function (obj) {
    return wx.stopPullDownRefresh(__assign({}, obj));
};
exports.startPullDownRefresh = function (obj) {
    return wx.startPullDownRefresh(__assign({}, obj));
};
exports.pageScrollTo = function (obj) {
    return wx.pageScrollTo(__assign({}, obj));
};
exports.setStorageSync = function (key, value) {
    try {
        wx.setStorageSync(key, value);
    }
    catch (error) {
        exports.toast("showToast", {
            title: "存储失败",
            icon: "none",
            duration: 1500,
            mask: true,
            success: function () { },
            fail: function () { }
        });
    }
};
exports.removeStorageSync = function (key) {
    wx.removeStorageSync(key);
};
exports.getStorageSync = function (key) {
    try {
        var res = wx.getStorageSync(key);
        if (res) {
            return res;
        }
        else {
            return false;
        }
    }
    catch (error) {
        return false;
    }
};
//# sourceMappingURL=data:application/json;base64,